{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","id","uuidv4","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","className","s","lable","type","pattern","title","required","onChange","btn","Component","ContactList","contacts","onDeleteContact","list","map","item","onClick","inputId","Filter","App","filter","formSubmitHandler","data","find","contact","alert","changeFilter","deleteContact","contactId","prevState","getVisibleContact","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30661e1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1n8sh\",\"btn\":\"ContactList_btn__1cMY3\"};","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport shortid from 'shortid';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      id: uuidv4(),\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameInputId}>\n            Name\n            <input\n              className={s.lable}\n              type=\"text\"\n              name=\"name\"\n              id={this.nameInputId}\n              value={this.state.name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor={this.numberInputId}>\n            Number\n            <input\n              className={s.lable}\n              type=\"tel\"\n              name=\"number\"\n              id={this.numberInputId}\n              value={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import { PropTypes } from 'prop-types';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          {name}: {number}\n          <button\n            className={s.btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import { PropTypes } from 'prop-types';\nimport shortid from 'shortid';\n\nconst inputId = shortid.generate();\n\nconst Filter = ({ value, onChange }) => (\n  <label htmlFor={inputId}>\n    Find contacts by name\n    <input id={inputId} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { Component } from 'react';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const { contacts } = this.state;\n    const isNoUnique = contacts.find(contact => contact.name === data.name);\n    isNoUnique\n      ? alert(`${data.name} is alredy in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [data, ...contacts],\n        }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const visibleContacts = this.getVisibleContact();\n    const { filter } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"ContactForm_lable__3Depb\",\"btn\":\"ContactForm_btn__2pD-D\"};"],"sourceRoot":""}