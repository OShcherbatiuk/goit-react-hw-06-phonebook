{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","components/Section/Section.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","deleteContact","changeFilter","INITIAL_STATE","name","number","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","label","htmlFor","input","type","pattern","title","required","onChange","btn","Component","connect","dispatch","contactActions","getVisibleContact","filter","contacts","normalizedFilter","toLowerCase","contact","includes","phonebook","onDeleteContact","list","map","item","onClick","inputId","e","target","Container","container","children","Section","section","App","createReducer","actions","find","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d5cd547a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__w0nYq\",\"btn\":\"ContactList_btn__3uEGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__h-W-U\",\"input\":\"Filter_input__QgBIh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__dph5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3vaGu\"};","// import actionTypes from './phonebook-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// const addContact = data => ({\r\n//   type: actionTypes.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     ...data,\r\n//   },\r\n// });\r\n\r\nconst addContact = createAction('phonebook/addContact', data => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    ...data,\r\n  },\r\n}));\r\n\r\n// const deleteContact = id => ({\r\n//   type: actionTypes.DELETE,\r\n//   payload: id,\r\n// });\r\n\r\nconst deleteContact = createAction('phonebook/deleteContact');\r\n\r\n// const changeFilter = value => ({\r\n//   type: actionTypes.FILTER,\r\n//   payload: value,\r\n// });\r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { Component } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      id: uuidv4(),\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label className={s.label} htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id={this.nameInputId}\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor={this.numberInputId}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={this.numberInputId}\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className={s.btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(contactActions.addContact(data)),\r\n});\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport contactActions from '../../redux/phonebook/phonebook-actions';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            className={s.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getVisibleContact = (filter, contacts) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ phonebook: { filter, contacts } }) => ({\r\n  contacts: getVisibleContact(filter, contacts),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactActions.deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/phonebook/phonebook-actions';\r\nimport shortid from 'shortid';\r\nimport s from './Filter.module.css';\r\n\r\nconst inputId = shortid.generate();\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label} htmlFor={inputId}>\r\n    Find contacts by name\r\n    <input\r\n      className={s.input}\r\n      id={inputId}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.phonebook.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactActions.changeFilter(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from 'react';\r\nimport s from './Container.module.css';\r\n\r\nclass Container extends Component {\r\n  render() {\r\n    return <div className={s.container}>{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n};\r\n\r\nexport default Section;\r\n","// import { Component } from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport Container from './components/Container';\r\nimport Section from './components/Section';\r\n\r\nconst App = () => {\r\n  // componentDidMount() {\r\n  //   const contacts = localStorage.getItem('contacts');\r\n  //   const parsedContacts = JSON.parse(contacts);\r\n  //   if (parsedContacts) {\r\n  //     this.setState({ contacts: parsedContacts });\r\n  //   }\r\n  // }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (this.state.contacts !== prevState.contacts) {\r\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  //   }\r\n  // }\r\n  return (\r\n    <Container>\r\n      <Section title={'Phonebook'}>\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title={'Contacts'}>\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import types from './phonebook-types';\r\nimport actions from './phonebook-actions';\r\n\r\n// const contacts = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       const isNoUnique = state.find(contact => contact.name === payload.name);\r\n//       if (isNoUnique) {\r\n//         alert(`${payload.name} is alredy in contacts`);\r\n//         return state;\r\n//       } else {\r\n//         return [...state, payload];\r\n//       }\r\n//     // eslint-disable-next-line no-fallthrough\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst contacts = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    const isNoUnique = state.find(contact => contact.name === payload.name);\r\n    if (isNoUnique) {\r\n      alert(`${payload.name} is alredy in contacts`);\r\n      return state;\r\n    } else {\r\n      return [...state, payload];\r\n    }\r\n  },\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","// import { combineReducers } from 'redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport './index.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__40RkM\",\"label\":\"ContactForm_label__DfbUu\",\"input\":\"ContactForm_input__3lg1Q\",\"btn\":\"ContactForm_btn__34LfF\"};"],"sourceRoot":""}